apiVersion: batch/v1
kind: Job
metadata:
  name: song-recommender-ml-job
  namespace: yuandong
spec:
  template:
    metadata:
      labels:
        app: yuandong-song-recommender-ml
    spec:
      initContainers:
      - name: copy-datasets
        image: busybox
        imagePullPolicy: Always
        command: ["sh", "-c", "mkdir -p /shared/data && cp -r /home/yuandong/hw2/data/* /shared/data/ && chmod -R 777 /shared"]
        volumeMounts:
        - name: shared-volume
          mountPath: /shared
        - name: host-volume
          mountPath: /home/yuandong
      containers:
      - name: song-recommender-ml
        image: yuandongzhang/song-recommender-ml:1.0.1
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: ml-training-config
        env:
        - name: SHARED_DIR
          value: "/shared"
        - name: DATA_DIR
          value: "/shared/data"
        - name: PLAYLIST_FILE
          valueFrom:
            configMapKeyRef:
              name: ml-training-config
              key: DATASET
        - name: SONGS_FILE
          value: "/shared/data/2023_spotify_songs.csv"
        - name: MODEL_FILE
          value: "/shared/models/song_recommender.pkl"
        command: ["/bin/sh", "-c"]
        args:
          - |
            # Set the playlist file based on the dataset parameter
            export PLAYLIST_FILE="/shared/data/2023_spotify_${DATASET}.csv"
            echo "Using playlist file: $PLAYLIST_FILE"
            # Execute the training script
            python /app/train_model.py
        volumeMounts:
        - name: shared-volume
          mountPath: /shared
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: shared-volume
        persistentVolumeClaim:
          claimName: song-recommender-pvc
      - name: host-volume
        hostPath:
          path: /home/yuandong
      restartPolicy: OnFailure